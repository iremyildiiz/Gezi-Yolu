apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'



/**
 * Bu, React Native Android uygulamanızın yapılandırma bloğudur.
 * Varsayılan olarak, herhangi bir yapılandırma uygulamanıza gerek yoktur,
 * yalnızca ihtiyaç duyduğunuz satırları açın.
 */
react {
    /* Klasörler */
    //  Projenizin kökü, yani "package.json" dosyasının bulunduğu yer. Varsayılan olarak '../..'
    // root = file("../../")
    //  React Native NPM paketinin bulunduğu klasör. Varsayılan olarak ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //  React Native Codegen paketinin bulunduğu klasör. Varsayılan olarak ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //  React Native CLI giriş noktası olan cli.js dosyası. Varsayılan olarak ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Varyantlar */
    //  Hata ayıklanabilir olan varyantların listesi. Bunlar için
    //  JS paketleme ve varlıkların paketlenmesini atlayacağız. Varsayılan olarak yalnızca 'debug'.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Paketleme */
    //  Node komutu ve bayraklarını içeren bir liste. Varsayılan olarak sadece 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //  Paketleme sırasında çalıştırılacak komut. Varsayılan olarak 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //  Paketleme yapılandırma dosyasının yolu. Varsayılan boş.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //  Oluşturulan varlık dosyasının adı, JS paketini içeren
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //  Paketleme için giriş dosyası. Varsayılan olarak 'index.android.js' veya 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //  'bundle' komutlarına ekstra bayraklar geçmek için bir liste.
    //  Daha fazla bilgi için: https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Komutları */
    //  Hermes derleyici komutunu çalıştırmak için. Varsayılan 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //  Hermes derleyicisine geçirilecek bayraklar listesi. Varsayılan "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Otomatik Bağlama */
    autolinkLibrariesWithApp()
}

/**
 * Bu, yayın yapılarını küçük kodları küçültmek için Proguard'ı çalıştırmak için true olarak ayarlayın.
 */
def enableProguardInReleaseBuilds = false

/**
 * JavaScriptCore (JSC) için tercih edilen yapı lezzeti
 *
 * Örneğin, uluslararası varyantı kullanmak için:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * Uluslararası varyant, ICU i18n kitaplığı ve gerekli verileri içerir
 * örneğin `Date.toLocaleString` ve `String.localeCompare` ile kullanıldığında
 * en-US dışında diğer yerel ayarlar için doğru sonuçlar verir. Not edin ki
 * bu varyant, varsayılan olandan her mimari için yaklaşık 6MiB daha büyük.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.geziyolu"
    defaultConfig {
        applicationId "com.geziyolu"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Dikkat! Üretimde, kendi anahtar dosyanızı oluşturmanız gerekir.
            // bkz. https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
      apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
}

dependencies {
    // React Native versiyonu, React Native Gradle Eklentisi tarafından ayarlanır
    implementation("com.facebook.react:react-android")
    // Diğer bağımlılıklar


    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
